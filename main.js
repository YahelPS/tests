function modulesBlacklist(e){return e===203||e===433||e===434||e===445||e===446||e===457||e>=944&&e<=994}function getModules(e,t=!1){const n=a=>{if(modulesBlacklist(Number(a)))return;const s=modules[a];if(s.isInitialized||__r(Number(a)),s.publicModule.exports!==void 0)return e(s.publicModule.exports)};return(t?[Object.keys(modules).find(n)]:Object.keys(modules).filter(n)).filter(a=>a!==void 0).map(a=>Number(a))}function getModule(e,t=!0){const n=getModules(e,!0);if(n.length===0)return;const{publicModule:o}=modules[n[0]];return t?o.exports:o}function getModuleByProps(...e){return getModule(t=>e.every(n=>(t[n]??t.default?.[n])!==void 0),!0)}function getModuleByIndex(e){const t=modules[e];if(t!==void 0)return t.isInitialized||__r(Number(e)),t.publicModule}var getRandomValues,rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto<"u"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}var REGEX=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function validate(e){return typeof e=="string"&&REGEX.test(e)}for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));function stringify(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=(byteToHex[e[t+0]]+byteToHex[e[t+1]]+byteToHex[e[t+2]]+byteToHex[e[t+3]]+"-"+byteToHex[e[t+4]]+byteToHex[e[t+5]]+"-"+byteToHex[e[t+6]]+byteToHex[e[t+7]]+"-"+byteToHex[e[t+8]]+byteToHex[e[t+9]]+"-"+byteToHex[e[t+10]]+byteToHex[e[t+11]]+byteToHex[e[t+12]]+byteToHex[e[t+13]]+byteToHex[e[t+14]]+byteToHex[e[t+15]]).toLowerCase();if(!validate(n))throw TypeError("Stringified UUID is invalid");return n}function v4(e,t,n){e=e||{};var o=e.random||(e.rng||rng)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,t){n=n||0;for(var a=0;a<16;++a)t[n+a]=o[a];return t}return stringify(o)}const linkingModule=getModule(e=>e.openURL),replies={};linkingModule.addEventListener("url",e=>{let t=e.url;t=decodeURIComponent(t.replace("com.hammerandchisel.discord://",""));try{const n=JSON.parse(t);if(n.data===void 0)return;replies[n.id]&&(replies[n.id](n.data),delete replies[n.id])}catch{return}});function sendCommand(e,t=[],n){const o=v4();linkingModule.openURL(`com.hammerandchisel.discord://enmity?id=${o}&command=${e}&params=${t.join(",")}`).then(()=>{n&&(replies[o]=n)})}const Theme=getModule(e=>e.default?.theme).default.theme,theme=window.themes?.theme??"",themes$2=window.themes?.list??[];function getTheme(){return theme}function getThemeByName(e){return themes$2.find(t=>t.name===e)}function listThemes(){return themes$2.map(e=>e.name)}async function applyTheme(e){return new Promise((t,n)=>{sendCommand("apply-theme",[e,Theme],o=>{t(o)})})}async function removeTheme(){return new Promise((e,t)=>{sendCommand("remove-theme",[],n=>{e(n)})})}const React=getModuleByProps("createElement"),ComponentsModule=getModuleByProps("Button","Text","View"),FormsModule=getModuleByProps("Form","FormSection"),{lazy,memo,useCallback,useContext,useEffect,useImperativeHandle,useMemo,useReducer,useRef,useState}=React,{Alert,Button,FlatList,Image,ImageBackground,KeyboardAvoidingView,Modal,Pressable,RefreshControl,ScrollView,SectionList,StatusBar,StyleSheet,Switch,Text,TextInput,TouchableHighlight,TouchableOpacity,TouchableWithoutFeedback,Touchable,View,VirtualizedList}=ComponentsModule,{Form,FormArrow,FormCTA,FormCTAButton,FormCardSection,FormCheckbox,FormDivider,FormHint,FormIcon,FormInput,FormLabel,FormRadio,FormRow,FormSection,FormSelect,FormSubLabel,FormSwitch,FormTernaryCheckBox,FormText,FormTextColors,FormTextSizes}=FormsModule;var React$1=Object.freeze({__proto__:null,React,lazy,memo,useCallback,useContext,useEffect,useImperativeHandle,useMemo,useReducer,useRef,useState,Alert,Button,FlatList,Image,ImageBackground,KeyboardAvoidingView,Modal,Pressable,RefreshControl,ScrollView,SectionList,StatusBar,StyleSheet,Switch,Text,TextInput,TouchableHighlight,TouchableOpacity,TouchableWithoutFeedback,Touchable,View,VirtualizedList,Form,FormArrow,FormCTA,FormCTAButton,FormCardSection,FormCheckbox,FormDivider,FormHint,FormIcon,FormInput,FormLabel,FormRadio,FormRow,FormSection,FormSelect,FormSubLabel,FormSwitch,FormTernaryCheckBox,FormText,FormTextColors,FormTextSizes});const patches=[];function getPatchesByCaller(e){const t=[];for(const n of patches)for(const o of n.patches)o.caller===e&&t.push(o);return t}function unpatchAll(e){const t=getPatchesByCaller(e);if(!!t.length)for(const n of t)n.unpatch()}function override(e){return function(){if(!e.patches.length)return e.original.apply(this,arguments);let t,n=arguments;for(const a of e.patches.filter(s=>s.type==="before"))try{const s=a.callback(this,n,e.original.bind(this));Array.isArray(s)&&(n=s)}catch(s){console.error(`Could not fire before patch for ${e.func} of ${a.caller}`),console.error(s)}const o=e.patches.filter(a=>a.type==="instead");if(!o.length)t=e.original.apply(this,n);else for(const a of o)try{const s=a.callback(this,n,e.original.bind(this));s!==void 0&&(t=s)}catch(s){console.error(`Could not fire instead patch for ${e.func} of ${a.caller}`),console.error(s)}for(const a of e.patches.filter(s=>s.type==="after"))try{const s=a.callback(this,n,t);s!==void 0&&(t=s)}catch(s){console.error(`Could not fire after patch for ${e.func} of ${a.caller}`),console.error(s)}return t}}function push([e,t,n]){const o={caller:e,mdl:t,func:n,original:t[n],unpatch:()=>{o.mdl[o.func]=o.original,o.patches=[]},patches:[]};return t[n]=override(o),Object.assign(t[n],o.original,{toString:()=>o.original.toString(),__original:o.original}),patches.push(o),o}function get(e,t,n){const o=patches.find(a=>a.mdl===t&&a.func===n);return o||push([e,t,n])}function patch(e,t,n,o,a="after"){const s=get(e,t,n),r={caller:e,type:a,id:s.patches.length,callback:o,unpatch:()=>{if(s.patches.splice(s.patches.findIndex(l=>l.id===r.id&&l.type===a),1),s.patches.length<=0){const l=patches.findIndex(d=>d.mdl===t&&d.func===n);patches[l].unpatch(),patches.splice(l,1)}}};return s.patches.push(r),r.unpatch}function before(e,t,n,o){return patch(e,t,n,o,"before")}function instead(e,t,n,o){return patch(e,t,n,o,"instead")}function after(e,t,n,o){return patch(e,t,n,o,"after")}function create(e){return{getPatchesByCaller,before:(t,n,o)=>before(e,t,n,o),instead:(t,n,o)=>instead(e,t,n,o),after:(t,n,o)=>after(e,t,n,o),unpatchAll:()=>unpatchAll(e)}}const Patcher=create("enmity-commands"),Commands=getModuleByProps("getBuiltInCommands"),Discovery=getModuleByProps("useApplicationCommandsDiscoveryState"),Assets=getModuleByProps("getGuildTemplateIconURL");let commands=[];const section={id:"enmity",type:1,name:"Enmity",icon:"https://files.enmity.app/icon.png"};Patcher.after(Commands,"getBuiltInCommands",(e,t,n)=>[...n,...commands.values()]),Patcher.after(Assets.default,"getApplicationIconURL",(e,[t],n)=>{if(t.id==="enmity")return section.icon}),Patcher.after(Discovery,"useApplicationCommandsDiscoveryState",(e,[,,,t],n)=>{if(t!==!1)return n;if(!n.discoverySections.find(a=>a.key===section.id)&&commands.length){const a=[...commands.values()];n.discoveryCommands.push(...a),n.commands.push(...a.filter(s=>!n.commands.some(r=>r.name===s.name))),n.discoverySections.push({data:a,key:section.id,section}),n.sectionsOffset.push(commands.length)}!n.applicationCommandSections.find(a=>a.id===section.id)&&commands.length&&n.applicationCommandSections.push(section);const o=n.discoverySections.findIndex(a=>a.key==="-2");if(n.discoverySections[o]?.data){const a=n.discoverySections[o];a.data=a.data.filter(s=>!s.__enmity),a.data.length===0&&n.discoverySections.splice(o,1)}});function registerCommands(e,t){t.map(n=>{n.__enmity=!0,n.caller=e}),commands.push(...t)}function unregisterCommands(e){commands=commands.filter(t=>t.caller!==e)}const plugins$1=[],enabled=window.plugins.enabled,disabled=window.plugins.disabled;function registerPlugin(e){e.onEnable=()=>{e.onStart(),e.commands&&registerCommands(e.name,e.commands),console.log(`${e.name} has been enabled`)},e.onDisable=()=>{if(e.patches)for(const t of e.patches)t.unpatchAll();e.commands&&unregisterCommands(e.name),e.onStop(),console.log(`${e.name} has been disabled`)},enabled.includes(e.name)&&e.onEnable(),disabled.includes(e.name)&&e.onDisable(),plugins$1.push(e)}function getPlugin(e){return plugins$1.find(t=>t.name===e)}function getPlugins(){return plugins$1}function getEnabledPlugins(){return enabled}function getDisabledPlugins(){return disabled}function disablePlugin(e,t){enabled.includes(e)&&enabled.splice(enabled.indexOf(e),1),disabled.push(e),getPlugin(e).onDisable(),sendCommand("disable-plugin",[e],t)}function enablePlugin(e,t){disabled.includes(e)&&disabled.splice(disabled.indexOf(e),1),disabled.push(e),getPlugin(e).onEnable(),sendCommand("enable-plugin",[e],t)}const toastModule=getModule(e=>e.default?.open&&e.default?.close&&!e.default?.openLazy&&!e.default?.startDrag&&!e.default?.init);function showToast(e){toastModule.default.open(e)}const navigationModule$1=getModule(e=>e.default?.pushLazy),reactNavigationNative$1=getModule(e=>e.NavigationContainer),reactNavigationStack$1=getModule(e=>e.createStackNavigator),themedStylesheet$1=getModule(e=>e.createThemedStyleSheet),colorMap$1=getModule(e=>e.ThemeColorMap),{NavigationContainer:NavigationContainer$1}=reactNavigationNative$1,{createStackNavigator:createStackNavigator$1}=reactNavigationStack$1,{createThemedStyleSheet:createThemedStyleSheet$1}=themedStylesheet$1,{ThemeColorMap:ThemeColorMap$1}=colorMap$1,navbarStyle$1=createThemedStyleSheet$1({container:{backgroundColor:ThemeColorMap$1.BACKGROUND_MOBILE_SECONDARY,flex:1},cardStyle:{backgroundColor:"transparent"},header:{backgroundColor:ThemeColorMap$1.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},headerTitleContainer:{color:ThemeColorMap$1.HEADER_PRIMARY}}),cardStyle$1=createThemedStyleSheet$1({cardContainer:{padding:15,width:"100%",flex:1,flexDirection:"column"},cardHeader:{height:45,borderTopLeftRadius:5,borderTopRightRadius:5,backgroundColor:ThemeColorMap$1.BACKGROUND_SECONDARY_ALT},cardBody:{padding:5,backgroundColor:ThemeColorMap$1.BACKGROUND_SECONDARY},text:{color:ThemeColorMap$1.TEXT_DANGER}}),PluginCard=({plugin:e,removePlugin:t})=>{const[n,o]=useState(!0);return useEffect(()=>{const a=getEnabledPlugins().includes(e.name);o(a)},[]),React.createElement(View,{style:cardStyle$1.cardContainer},React.createElement(View,{style:cardStyle$1.cardHeader},React.createElement(FormRow,{label:e.name,trailing:React.createElement(TouchableOpacity,{onPress:()=>{sendCommand("uninstall-plugin",[e.name],a=>{showToast({content:`${e.name} has been uninstalled.`}),t(e.name)})}},React.createElement(Text,{style:cardStyle$1.text},"Uninstall"))})),React.createElement(View,{style:cardStyle$1.cardBody},React.createElement(FormRow,{label:"Enabled",trailing:React.createElement(FormSwitch,{value:n,onValueChange:a=>{o(a),showToast({content:`${e.name} has been ${a?"enabled":"disabled"}.`}),a?enablePlugin(e.name):disablePlugin(e.name)}})})))},PluginsScreen=()=>{const[e,t]=useState([]);useEffect(()=>{t(getPlugins)},[]);const n=o=>{t(e.filter(a=>a.name!==o))};return React.createElement(View,{style:{flex:1}},React.createElement(Form,null,e.map(o=>React.createElement(PluginCard,{plugin:o,removePlugin:n}))))},Stack$1=createStackNavigator$1(),PluginPage=()=>React.createElement(NavigationContainer$1,null,React.createElement(Stack$1.Navigator,{style:navbarStyle$1.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:navbarStyle$1.cardStyle,headerStyle:navbarStyle$1.header,headerTitleContainerStyle:navbarStyle$1.headerTitleContainer,headerTitleAlign:"center",safeAreaInsets:{top:0}}},React.createElement(Stack$1.Screen,{name:"Plugins",component:PluginsScreen,options:{headerTitleStyle:{color:"white"},headerLeft:()=>React.createElement(Button,{color:"#fff",title:"Close",onPress:()=>navigationModule$1.default.pop()}),headerRight:()=>React.createElement(Button,{color:"#fff",title:"Add",onPress:()=>{Alert.prompt("Install a plugin","Please enter the URL of the plugin to install.",e=>{sendCommand("install-plugin",[e],t=>{showToast({content:"Plugin has been installed. Please reload Discord."})})})}})}}))),dialogModule=getModule(e=>e.default?.show);function showDialog(e){dialogModule.default.show(e)}const navigationModule=getModule(e=>e.default?.pushLazy),reactNavigationNative=getModule(e=>e.NavigationContainer),reactNavigationStack=getModule(e=>e.createStackNavigator),themedStylesheet=getModule(e=>e.createThemedStyleSheet),colorMap=getModule(e=>e.ThemeColorMap),{NavigationContainer}=reactNavigationNative,{createStackNavigator}=reactNavigationStack,{createThemedStyleSheet}=themedStylesheet,{ThemeColorMap}=colorMap,navbarStyle=createThemedStyleSheet({container:{backgroundColor:ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,flex:1},cardStyle:{backgroundColor:"transparent"},header:{backgroundColor:ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},headerTitleContainer:{color:ThemeColorMap.HEADER_PRIMARY}}),cardStyle=createThemedStyleSheet({cardContainer:{padding:15,width:"100%",flex:1,flexDirection:"column"},cardHeader:{height:45,borderTopLeftRadius:5,borderTopRightRadius:5,backgroundColor:ThemeColorMap.BACKGROUND_SECONDARY_ALT},cardBody:{padding:5,backgroundColor:ThemeColorMap.BACKGROUND_SECONDARY},text:{color:ThemeColorMap.TEXT_DANGER}}),ThemeCard=({theme:e,uninstallTheme:t})=>React.createElement(View,{style:cardStyle.cardContainer},React.createElement(View,{style:cardStyle.cardHeader},React.createElement(FormRow,{label:e,trailing:React.createElement(TouchableOpacity,{onPress:()=>{sendCommand("uninstall-theme",[e],n=>{showToast({content:n}),t(e)})}},React.createElement(Text,{style:cardStyle.text},"Uninstall"))})),React.createElement(View,{style:cardStyle.cardBody},React.createElement(FormRow,{label:"Apply",onPress:()=>{applyTheme(e).then(n=>{showDialog({title:"Theme has been applied, please restart Discord to apply the new theme."})})}}))),ThemesScreen=()=>{const[e,t]=useState([]);useEffect(()=>{t(listThemes())},[]);const n=o=>{getTheme()===o&&removeTheme(),t(e.filter(a=>a!==o))};return React.createElement(View,{style:{flex:1}},React.createElement(Form,null,getTheme()!==""&&React.createElement(FormRow,{label:"Remove applied theme",onPress:()=>{removeTheme().then(()=>{showDialog({title:"Theme has been removed, please restart Discord to remove the theme."})})}}),e.map(o=>React.createElement(ThemeCard,{theme:o,uninstallTheme:n}))))},Stack=createStackNavigator(),ThemePage=()=>React.createElement(NavigationContainer,null,React.createElement(Stack.Navigator,{style:navbarStyle.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:navbarStyle.cardStyle,headerStyle:navbarStyle.header,headerTitleContainerStyle:navbarStyle.headerTitleContainer,headerTitleAlign:"center",safeAreaInsets:{top:0}}},React.createElement(Stack.Screen,{name:"Themes",component:ThemesScreen,options:{headerTitleStyle:{color:"white"},headerLeft:()=>React.createElement(Button,{color:"#fff",title:"Close",onPress:()=>navigationModule.default.pop()}),headerRight:()=>React.createElement(Button,{color:"#fff",title:"Add",onPress:()=>{Alert.prompt("Install a theme","Please enter the URL of the theme to install.",e=>{if(!e.includes("json")){showToast({content:"Invalid url for theme."});return}sendCommand("install-theme",[e],t=>{showToast({content:t})})})}})}}))),nativeModules=getModule(e=>e.NativeModules).NativeModules;function reloadDiscord(){nativeModules.BundleUpdaterManager.reload()}function getVersion(){return nativeModules.InfoDictionaryManager.Version}function getBuild(){return nativeModules.InfoDictionaryManager.Build}function getDevice(){return nativeModules.DCDDeviceManager.device}function getSystemVersion(){return nativeModules.DCDDeviceManager.systemVersion}const Navigation=getModule(e=>e.default?.pushLazy);function patchSettings(){const e=create("enmity-settings");let t;const n=getModule(a=>a.default?.name==="UserSettingsOverviewWrapper"),o=e.after(n,"default",(a,s,r)=>{if(t!==void 0)return;o(),t=r.type;const{openURL:l}=getModule(c=>c.handleSupportedURL),d=getModule(c=>c.default?.Messages).default.Messages;e.after(t.prototype,"render",(c,h,{props:{children:u}})=>{const p=u.findIndex(g=>g.props.title===d.PREMIUM_SETTINGS),{version:m}=window.enmity;u.splice(p,0,React.createElement(React.Fragment,null,React.createElement(FormSection,{title:"Enmity"},React.createElement(FormRow,{label:"Enmity",trailing:React.createElement(FormLabel,{text:m}),onPress:()=>{l(`https://github.com/enmity-mod/enmity/commit/${m}`)}}),React.createElement(FormDivider,null),React.createElement(FormRow,{label:"Plugins",trailing:React.createElement(FormArrow,null),onPress:()=>{Navigation.default.push(PluginPage,{})}}),React.createElement(FormDivider,null),React.createElement(FormRow,{label:"Themes",trailing:React.createElement(FormArrow,null),onPress:()=>{Navigation.default.push(ThemePage,{})}}),React.createElement(FormDivider,null),React.createElement(FormRow,{label:React.createElement(FormLabel,{style:{color:"#29c566"},text:"Reload Discord"}),arrowShown:!0,onPress:()=>{showDialog({title:"Are you sure you want to reload Discord?",confirmText:"Yes",cancelText:"No",onConfirm:reloadDiscord})}})),React.createElement(FormSection,null,React.createElement(FormRow,{label:React.createElement(FormLabel,{text:"Discord"}),trailing:React.createElement(FormArrow,null),onPress:()=>{l("https://discord.gg/rMdzhWUaGT")}}),React.createElement(FormDivider,null),React.createElement(FormRow,{label:React.createElement(FormLabel,{text:"GitHub"}),trailing:React.createElement(FormArrow,null),onPress:()=>{l("https://github.com/enmity-mod/enmity")}}),React.createElement(FormDivider,null),React.createElement(FormRow,{label:React.createElement(FormLabel,{text:"Twitter"}),trailing:React.createElement(FormArrow,null),onPress:()=>{l("https://twitter.com/enmityapp")}}),React.createElement(FormDivider,null))))})})}function applyPatches(){patchSettings()}const assetsModule=getModule(e=>e.registerAsset);function getAssetByName(e){let t,n=1;for(;t=assetsModule.getAssetByID(n),!(t===void 0||t.name===e);)n+=1;return{id:n,...t}}function getAssets(){const e=[];let t=1;for(;;){const n=assetsModule.getAssetByID(t);if(n===void 0)break;e.push({id:t,...n}),t+=1}return e}const restModule=getModule(e=>e.default?.getAPIBaseURL);async function getRequest(e){return restModule.default.get(e)}async function postRequest(e){return restModule.default.post(e)}async function putRequest(e){return restModule.default.put(e)}async function patchRequest(e){return restModule.default.patch(e)}async function deleteRequest(e){return restModule.default.delete(e)}async function getAPIBaseURL(){return restModule.default.getAPIBaseURL()}const userModule=getModule(e=>e.fetchProfile);async function fetchCurrentUser(){return userModule.fetchCurrentUser()}async function fetchProfile(e){return userModule.fetchProfile(e)}async function getUser(e){return userModule.getUser(e)}const storageModule=getModule(e=>e.getItem);async function getItem(e){return storageModule.getItem(e)}async function setItem(e,t){return storageModule.setItem(e,t)}async function removeItem(e){return storageModule.removeItem(e)}const SettingsModule=getModuleByProps("watchKeys");function getSetting(e){return SettingsModule.get(e)}function setSetting(e){SettingsModule.set(e)}const ClipboardModule=getModuleByProps("setString","getString");function setString(e){ClipboardModule.setString(e)}async function getString(){return ClipboardModule.getString()}const tokenModule=getModule(e=>e.default?.setToken);function getToken(){return tokenModule.default.getToken()}function setToken(e){return tokenModule.default.setToken(e)}function hideToken(){tokenModule.default.hideToken()}function showToken(){tokenModule.default.showToken()}function removeToken(){tokenModule.default.removeToken()}const Messages=getModule(e=>e.default?.receiveMessage),BotMessages=getModule(e=>e.createBotMessage),Images=getModule(e=>e.default?.BOT_AVATARS);Images.default.BOT_AVATARS.ENMITY="https://github.com/enmity-mod.png";function sendReply(e,t,n,o){const a=BotMessages.createBotMessage(e,"");a.author.username=n??"Enmity",a.author.avatar=o?n:"ENMITY",o&&(Images.default.BOT_AVATARS[n]=o),typeof t=="string"?a.content=t:Object.assign(a,t),Messages.default.receiveMessage(e,a)}function prepareApi(){window.enmity={getModule,getModules,getModuleByProps,getModuleByIndex,getAssetByName,getAssets,version:"214f2c7",themer:{getTheme,getThemeByName,listThemes,applyTheme,removeTheme},patcher:{create,before,instead,after},plugins:{enabled:[],disabled:[],registerPlugin,getPlugin,getPlugins,getEnabledPlugins,getDisabledPlugins,disablePlugin,enablePlugin},clipboard:{setString,getString},clyde:{sendReply},commands:{registerCommands,unregisterCommands},dialog:{showDialog},native:{reloadDiscord,getVersion,getBuild,getDevice,getSystemVersion},rest:{get:getRequest,post:postRequest,put:putRequest,patch:patchRequest,delete:deleteRequest,getAPIBaseURL},react:{...React$1},settings:{get:getSetting,set:setSetting},storage:{getItem,setItem,removeItem},toast:{showToast},token:{getToken,setToken,hideToken,showToken,removeToken},users:{fetchCurrentUser,fetchProfile,getUser}}}var ApplicationCommandSectionType;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(ApplicationCommandSectionType||(ApplicationCommandSectionType={}));var ApplicationCommandType;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(ApplicationCommandType||(ApplicationCommandType={}));var ApplicationCommandInputType;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(ApplicationCommandInputType||(ApplicationCommandInputType={}));var ApplicationCommandPermissionType;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(ApplicationCommandPermissionType||(ApplicationCommandPermissionType={}));var ApplicationCommandOptionType;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number"})(ApplicationCommandOptionType||(ApplicationCommandOptionType={}));var InteractionTypes;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(InteractionTypes||(InteractionTypes={}));const list={id:"installed-plugins",applicationId:section.id,name:"plugins",displayName:"plugins",description:"List installed plugins",displayDescription:"List installed plugins",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,execute:(e,t)=>{const n=t.channel.id;if(getPlugins().length===0){sendReply(n,"No plugins installed.");return}const a=getEnabledPlugins(),s=getDisabledPlugins();let r="";a.length>0&&(r=`**Enabled plugins (${a.length})**:
`,r+=`> ${a.join(", ")}
`),s.length>0&&(r+=`**Disabled plugins (${s.length})**:
`,r+=`> ${s.join(", ")}`),sendReply(n,r)}},install={id:"install-plugin",applicationId:section.id,name:"install",displayName:"install",description:"Install a plugin",displayDescription:"Install a plugin",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,options:[{name:"plugin",displayName:"plugin",description:"Plugin url",displayDescription:"Plugin url",required:!0,type:ApplicationCommandOptionType.String}],execute:(e,t)=>{const n=e[0].value,o=t.channel.id;sendCommand("install-plugin",[n],a=>{sendReply(o,a)})}},uninstall={id:"uninstall-plugin",applicationId:section.id,name:"uninstall",displayName:"uninstall",description:"Uninstall a plugin",displayDescription:"Uninstall a plugin",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,options:[{name:"plugin",displayName:"plugin",description:"Plugin name",displayDescription:"Plugin name",type:ApplicationCommandOptionType.String,required:!0}],execute:(e,t)=>{const n=e[0].value,o=t.channel.id;sendCommand("uninstall-plugin",[n],a=>{sendReply(o,a)})}},disable={id:"disable-plugin",applicationId:section.id,name:"disable",displayName:"disable",description:"Disable a plugin",displayDescription:"Disable a plugin",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,options:[{name:"plugin",displayName:"plugin",description:"Plugin name",displayDescription:"Plugin name",type:ApplicationCommandOptionType.String,required:!0}],execute:(e,t)=>{const n=e[0].value,o=t.channel.id;disablePlugin(n,a=>{if(a==="yes"){sendReply(o,`**${n}** has been disabled.`);return}sendReply(o,`Error when disabling **${n}**.`)})}},enable={id:"enable-plugin",applicationId:section.id,name:"enable",displayName:"enable",description:"Enable a plugin",displayDescription:"Enable a plugin",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,options:[{name:"plugin",displayName:"plugin",description:"Plugin name",displayDescription:"Plugin name",type:ApplicationCommandOptionType.String,required:!0}],execute:(e,t)=>{const n=e[0].value,o=t.channel.id;enablePlugin(n,a=>{if(a==="yes"){sendReply(o,`**${n}** has been enabled.`);return}sendReply(o,`Error when enabling **${n}**.`)})}};var plugins=[list,install,uninstall,disable,enable];const themes={id:"list-themes",applicationId:section.id,name:"themes",displayName:"themes",description:"List available themes",displayDescription:"List available themes",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,execute:(e,t)=>{const n=listThemes();if(n.length===0){sendReply(t.channel.id,"No themes installed.");return}sendReply(t.channel.id,`**Installed themes (${n.length})**: ${n.join(", ")}`)}},apply={id:"apply-theme",applicationId:section.id,name:"apply",displayName:"apply",description:"Apply a theme",displayDescription:"Apply a theme",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,options:[{name:"name",displayName:"name",description:"Theme's name",displayDescription:"Theme's name",type:ApplicationCommandOptionType.String,required:!0,choices:listThemes().map(e=>({name:e,displayName:e,value:e}))}],execute:(e,t)=>{const n=e[0].value;getThemeByName(n)||sendReply(t.channel.id,"Theme couldn't be found."),applyTheme(n).then(a=>{sendReply(t.channel.id,a)})}},clear={id:"clear-theme",applicationId:section.id,name:"clear",displayName:"clear",description:"Remove applied theme",displayDescription:"Remove applied theme",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,execute:(e,t)=>{removeTheme().then(n=>{sendReply(t.channel.id,n)})}};var themes$1=[themes,apply,clear];const debug={id:"debug-command",name:"debug",displayName:"debug",description:"Print out your device information",displayDescription:"Print out your device information",applicationId:section.id,type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltInText,execute:()=>{let e=`**Debug Info:**
`;return e+=`> Discord: ${getVersion()} (${getBuild()})
`,e+=`> Device: ${getDevice()}
`,e+=`> System: ${getSystemVersion()}
`,{content:e}}},reload={id:"reload-command",name:"reload",displayName:"reload",description:"Reload Discord",displayDescription:"Reload Discord",applicationId:section.id,type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,execute:function(e){reloadDiscord()}},token={id:"token-command",name:"token",displayName:"token",description:"Show your Discord's token",displayDescription:"Show your Discord's token",applicationId:section.id,type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,execute:function(e,t){const n=getToken(),o=t.channel.id;sendReply(o,`\`${n}\``)}};var utils=[debug,reload,token];let socket;function connectWebsocket(host){console.log("Connecting to debug ws"),socket!==void 0&&socket.readyState!==WebSocket.CLOSED&&(socket.close(),socket=null),socket=new WebSocket(`ws://${host}`),socket.addEventListener("open",()=>{console.log("Connected with debug websocket"),showToast({content:"Connected to the websocket server."})}),socket.addEventListener("error",e=>{console.log(`Error with debug websocket: ${e.message}`),showToast({content:"An error occured with the websocket connection."})}),socket.addEventListener("close",e=>{console.log(`Error with debug websocket: ${e.message}`),showToast({content:"The websocket connection has been closed."})}),socket.addEventListener("message",message=>{try{console.log(eval(message.data))}catch(e){console.error(e)}})}function prepareWebsocket(){const e=nativeLoggingHook;globalThis.nativeLoggingHook=(t,n)=>(socket?.readyState===WebSocket.OPEN&&socket.send(JSON.stringify({level:n,message:t})),e(t,n)),window.enmity_debug===!0&&connectWebsocket(`${window.enmity_debug_ip}:9090`)}function sendMessage(e){socket?.readyState===WebSocket.OPEN&&socket.send(e)}const connect={id:"websocket-devtools",applicationId:section.id,name:"websocket",displayName:"websocket",description:"Connect to the websocket server",displayDescription:"Connect to the websocket server",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,options:[{name:"host",displayName:"host",description:"Host of the debugger",displayDescription:"Host of the debugger",type:ApplicationCommandOptionType.String,required:!0}],execute:e=>{const t=e[0].value;connectWebsocket(t)}},dump={id:"dump-command",applicationId:section.id,name:"dump",displayName:"dump",description:"Dump Discord's modules",displayDescription:"Dump Discord's modules",type:ApplicationCommandType.Chat,inputType:ApplicationCommandInputType.BuiltIn,execute:function(e,t){const n=t.channel.id,o=window.modules;function a(s){if(typeof s=="function")return s.toString();if(Array.isArray(s))return s.map(a);if(typeof s=="object"){const r={};for(const l in s)r[l]=a(s[l]);return r}return s}for(const s of Object.keys(o))try{const r=o[s],l={id:s};if(!r.publicModule?.exports)continue;const d=r.publicModule.exports;for(const c of Object.keys(r.publicModule.exports))l[c]=a(d[c]);sendMessage(JSON.stringify(l,null,"	"))}catch(r){console.log(`Couldn't dump module ${s}`),console.log(r)}sendReply(n,"Modules has been dumped.")}};var websocket=[connect,dump];function prepareCommands(){const e=[...plugins,...websocket,...utils,...themes$1];registerCommands("enmity",e)}try{prepareApi(),applyPatches(),prepareWebsocket(),prepareCommands()}catch(e){console.error(e)}
